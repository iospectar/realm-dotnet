name: Publish Release
"on": workflow_dispatch
jobs:
  main:
    runs-on: windows-latest
    environment: Production
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Download all artifacts
      uses: dawidd6/action-download-artifact@d0f291cf39bd21965ea9c4c6e210fc355c3844ed
      with:
        workflow: main.yml
        commit: ${{ github.sha }}
        path: ${{ github.workspace }}/Realm/packages/
    - name: Extract release notes
      id: extract-release-notes
      run: |
        $changelogContent = Get-Content -Raw -Path "./CHANGELOG.md"
        $output_file = "./RELEASE_NOTES.md"
        $regex = "(?sm)^(## \d{1,2}\.\d{1,2}\.\d{1,2}(?:-[a-zA-Z]*\.\d{1,2})? \(\d{4}-\d{2}-\d{2}\))(.+?)(\n## \d{1,2}\.\d{1,2}\.\d{1,2}(?:-[a-zA-Z]*\.\d{1,2})? \(\d{4}-\d{2}-\d{2}\))"
        $changelogContent -match $regex
        Set-Content -Path $output_file -Value $Matches[2]
        echo "::set-output name=release-notes-path::$output_file"
    - name: Read version
      id: get-version
      run: |
        $nupkgName = ls "Realm/packages" | Select -expandproperty Name | Select-String Realm.Fody
        $nupkgName -match "(?sm)\d{1,2}\.\d{1,2}\.\d{1,2}(?:-[a-zA-Z]*\.\d{1,2})?"
        $version = $Matches[0]
        echo "::set-output name=version::$version"
    - name: NuGet Publish Realm.${{ steps.get-version.outputs.version }}
      run: dotnet nuget push ${{ github.workspace }}/Realm/packages/Realm.${{ steps.get-version.outputs.version }}/Realm.${{ steps.get-version.outputs.version }}.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    - uses: actions/setup-node@v2
      with:
        node-version: 12.x
        registry-url: https://registry.npmjs.org
    - name: Npm Publish io.realm.unity-${{ steps.get-version.outputs.version }}
      run: npm publish ${{ github.workspace }}/Realm/packages/io.realm.unity-${{ steps.get-version.outputs.version }}.tgz/io.realm.unity-${{ steps.get-version.outputs.version }}.tgz
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
